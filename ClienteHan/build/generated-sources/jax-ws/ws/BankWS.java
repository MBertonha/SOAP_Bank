
package ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BankWS", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BankWS {


    /**
     * 
     * @param valor
     * @param nome
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deposito", targetNamespace = "http://ws/", className = "ws.Deposito")
    @ResponseWrapper(localName = "depositoResponse", targetNamespace = "http://ws/", className = "ws.DepositoResponse")
    @Action(input = "http://ws/BankWS/depositoRequest", output = "http://ws/BankWS/depositoResponse")
    public boolean deposito(
        @WebParam(name = "valor", targetNamespace = "")
        double valor,
        @WebParam(name = "nome", targetNamespace = "")
        String nome);

    /**
     * 
     * @param valor
     * @param nome
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "saque", targetNamespace = "http://ws/", className = "ws.Saque")
    @ResponseWrapper(localName = "saqueResponse", targetNamespace = "http://ws/", className = "ws.SaqueResponse")
    @Action(input = "http://ws/BankWS/saqueRequest", output = "http://ws/BankWS/saqueResponse")
    public boolean saque(
        @WebParam(name = "valor", targetNamespace = "")
        double valor,
        @WebParam(name = "nome", targetNamespace = "")
        String nome);

    /**
     * 
     * @param senha
     * @param nome
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "consultUser", targetNamespace = "http://ws/", className = "ws.ConsultUser")
    @ResponseWrapper(localName = "consultUserResponse", targetNamespace = "http://ws/", className = "ws.ConsultUserResponse")
    @Action(input = "http://ws/BankWS/consultUserRequest", output = "http://ws/BankWS/consultUserResponse")
    public String consultUser(
        @WebParam(name = "nome", targetNamespace = "")
        String nome,
        @WebParam(name = "senha", targetNamespace = "")
        String senha);

    /**
     * 
     * @param senha
     * @param nome
     * @param saldo
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cadastrarUser", targetNamespace = "http://ws/", className = "ws.CadastrarUser")
    @ResponseWrapper(localName = "cadastrarUserResponse", targetNamespace = "http://ws/", className = "ws.CadastrarUserResponse")
    @Action(input = "http://ws/BankWS/cadastrarUserRequest", output = "http://ws/BankWS/cadastrarUserResponse")
    public boolean cadastrarUser(
        @WebParam(name = "nome", targetNamespace = "")
        String nome,
        @WebParam(name = "senha", targetNamespace = "")
        String senha,
        @WebParam(name = "saldo", targetNamespace = "")
        String saldo);

    /**
     * 
     * @param senha
     * @param nome
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "saldoUser", targetNamespace = "http://ws/", className = "ws.SaldoUser")
    @ResponseWrapper(localName = "saldoUserResponse", targetNamespace = "http://ws/", className = "ws.SaldoUserResponse")
    @Action(input = "http://ws/BankWS/saldoUserRequest", output = "http://ws/BankWS/saldoUserResponse")
    public double saldoUser(
        @WebParam(name = "nome", targetNamespace = "")
        String nome,
        @WebParam(name = "senha", targetNamespace = "")
        String senha);

    /**
     * 
     * @param newNome
     * @param oldNome
     * @param oldSenha
     * @param newSenha
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "alterCadastro", targetNamespace = "http://ws/", className = "ws.AlterCadastro")
    @ResponseWrapper(localName = "alterCadastroResponse", targetNamespace = "http://ws/", className = "ws.AlterCadastroResponse")
    @Action(input = "http://ws/BankWS/alterCadastroRequest", output = "http://ws/BankWS/alterCadastroResponse")
    public boolean alterCadastro(
        @WebParam(name = "oldNome", targetNamespace = "")
        String oldNome,
        @WebParam(name = "newNome", targetNamespace = "")
        String newNome,
        @WebParam(name = "oldSenha", targetNamespace = "")
        String oldSenha,
        @WebParam(name = "newSenha", targetNamespace = "")
        String newSenha);

}
